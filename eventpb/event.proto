syntax = "proto3";
package eventpb;
option go_package = "github.com/flowbehappy/tigate/eventpb";

import "heartbeatpb/heartbeat.proto";
// 这个 proto 主要描述的是 dispatcher 们跟 logService 交互需要用到的各类定义
// 包括传输的 event 结构，通信的 rpc 

message Filter {
}


message ResolvedTs {

}

enum OpType {
	OpTypePut = 0;
	OpTypeDelete = 1;
}

message Event {
    bytes key = 1;
	// nil for delete type
	bytes value = 2;
	// nil for insert type
	bytes OldValue = 3;
    OpType op_type = 4;

}

message TxnEvent {
    repeated Event events = 1;
    uint64 commit_ts = 2; // 跟上述 event 同时出现 -- 就是标记目前达成的 resolvedTs
    uint64 start_ts = 3; // 事务开始时间戳
}

message TableInfo {

}

message EventFeed {
    repeated TxnEvent txn_events = 1; // 包含多个 txn events
    uint64 resolved_ts = 2; // 跟上述 event 同时出现 -- 就是标记目前达成的 resolvedTs
    string dispatcher_id = 3; // 表示这个 event 是 对应哪个 dispatcher 的
    float ratio = 4; // 表示这个 event 应该被发送到哪个 dispatcher 的 ratio
    TableInfo table_info = 5; // 包含 table 相关信息，包括表名，主键，列名等
}

message RegisterDispatcherRequest {
    string dispatcher_id = 1;
    heartbeatpb.TableSpan table_span = 2;
    uint64 start_ts = 3;
    string server_id = 4;
    bool remove = 5; // 要移除的时候设为 true
    string namespace = 6;
    string changefeed_id = 7;
}
