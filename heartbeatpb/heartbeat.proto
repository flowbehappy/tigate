syntax = "proto3";
package heartbeatpb;

option go_package = "github.com/flowbehappy/tigate/heartbeatpb";

message TableSpan {
    uint64 TableID   = 1;
	bytes StartKey  = 2;
	bytes EndKey    = 3;
}

message HeartBeatRequest {
    string changefeedID = 1;
    Watermark watermark = 2;
    repeated TableSpanStatus statuses = 3;
    bool compeleteStatus = 4; // 是否包含了所有的 table status
    RunningError warning = 5;
    RunningError err = 6;
}

message Watermark {
    uint64 checkpointTs = 1; // min checkpointTs of all tables in the eventDispatcherManager
    uint64 resolvedTs = 2;   // min resolvedTs of all tables in the eventDispatcherManager
}

enum Action {
    Write = 0;
    Pass = 1;
}

message DispatcherAction {
    Action action = 2;
    uint64 CommitTs = 3; // DDLCommitTs
}

message ACK {
    uint64 CommitTs = 1; // DDLCommitTs
}

message DispatcherStatus {
    DispatcherID ID = 1;
    DispatcherAction action = 2;
    ACK ack = 3;
}

message HeartBeatResponse {
    string changefeedID = 1;
    repeated DispatcherStatus dispatcherStatuses = 2;
}

enum ScheduleAction {
    Create = 0;
    Remove = 1;
}

message DispatcherConfig {
    TableSpan span = 1;
    uint64 startTs = 2;
    DispatcherID dispatcherID = 3;
}

message ScheduleDispatcherRequest {
    string changefeedID = 1;
    DispatcherConfig config = 2;
    ScheduleAction scheduleAction = 3;
}

message MaintainerHeartbeat {
    repeated MaintainerStatus statuses = 1;
}

message MaintainerStatus {
    string changefeedID = 1;
    string feed_state = 2;
    ComponentState state = 3;
    uint64 checkpoint_ts = 4;
    repeated RunningError warning = 5;
    repeated RunningError err = 6;
}

message CoordinatorBootstrapRequest {
    int64 version = 1;
}

message CoordinatorBootstrapResponse {
    repeated MaintainerStatus statuses = 1;
}

message AddMaintainerRequest  {
    string id = 1;
    bytes config = 2;
    uint64 checkpoint_ts = 3;
}

message RemoveMaintainerRequest  {
    string id = 1;
    bool cascade = 2;
}

message MaintainerBootstrapRequest {
    string changefeedID = 1;
    bytes config = 2;
    uint64 checkpoint_ts = 3;
}

message MaintainerBootstrapResponse {
    string changefeedID = 1;
    repeated BootstrapTableSpan spans = 2;
}

message BootstrapTableSpan {
    DispatcherID ID = 1;
    TableSpan span = 2;
    ComponentState component_status = 3;
    uint64 checkpoint_ts = 4;
}

message MaintainerCloseRequest {
    string changefeedID = 1;
}

message MaintainerCloseResponse {
    string changefeedID = 1;
    bool success = 2;
}

message State {
    bool IsBlocked      = 1;
    uint64 BlockTs         = 2;
    repeated TableSpan BlockTableSpan = 3;
    repeated TableSpan NeedDroppedTableSpan =4;
    repeated TableSpan NeedAddedTableSpan = 5;
}

message TableSpanStatus {
    DispatcherID ID = 1; // for which dispatcher
    ComponentState component_status = 2;
    State state = 3;
    uint64 checkpoint_ts = 4;
}

enum ComponentState {
    Unknown = 0;
    Absent = 1;
    Working = 2;
    Stopped = 3;
}

message RunningError {
    string time = 1;
    string node = 2;
    string code = 3;
    string message = 4;
}

message DispatcherID {
    uint64 high = 1;
    uint64 low = 2;
}
