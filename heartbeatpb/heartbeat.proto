syntax = "proto3";
package heartbeatpb;
option go_package = "./heartbeatpb";

message TableSpan {
    uint64 TableID   = 1;
	bytes StartKey  = 2;
	bytes EndKey    = 3;
}

// message TableSpanProgress {
//     TableSpan span = 1;
//     bool IsBlocked      = 2;
// 	uint64 BlockTs         = 3;
// 	repeated TableSpan BlockTableSpan = 4;
// 	uint64 CheckpointTs    = 5;
//     string dispatcherID = 6;
// }

message HeartBeatRequest {
    string changefeedID = 1;
    uint64 checkpointTs = 2; // eventDispatcherManager 当前全局最小的 checkpointTs
} 

enum Action {
    None = 0;
    Write = 1;
    Pass = 2;
}

message TableProgress {
    TableSpan span = 1;
    bool IsBlocked      = 2;
    uint64 BlockTs         = 3;
    uint64 CheckpointTs    = 4;
}

// 这名字重新取，我真的要吐了
message TableProgressInfo {
    TableSpan span = 1; // for which dispatcher
    repeated TableProgress tableProgresses = 2; // 救命了这名字取得
    Action action = 3;

}
message HeartBeatResponse {
    repeated TableProgressInfo info = 1;
    string changefeedID = 2;
}

enum ScheduleAction {
    Create = 0;
    Remove = 1;
}

message DispatcherConfig {
    TableSpan span = 1;
    uint64 startTs = 2;
}

message ScheduleDispatcherRequest {
    string changefeedID = 1;
    DispatcherConfig config = 2;
    ScheduleAction scheduleAction = 3;
}

message MaintainerHeartbeat {
    repeated MaintainerStatus statuses = 1;
}

message MaintainerStatus {
    string changefeedID = 1;
    string feed_state = 2;
    int32 scheduler_status = 3;
    uint64 checkpoint_ts = 4;
}

message CoordinatorBootstrapRequest {
    int64 version = 1;
}

message CoordinatorBootstrapResponse {
    repeated MaintainerStatus statuses = 1;
}

message DispatchMaintainerRequest {
    repeated AddMaintainerRequest add_maintainers = 1;
    repeated RemoveMaintainerRequest remove_maintainers = 2;
}

message AddMaintainerRequest  {
    string id = 1;
    bool is_secondary = 2;
}

message RemoveMaintainerRequest  {
    string id = 1;
    bool cascade = 2;
}

message MaintainerBootstrapRequest {
    string id = 1;
}