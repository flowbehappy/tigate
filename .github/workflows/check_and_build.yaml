name: Build

on:
  push:
    branches:
      - master
      - "release-[0-9].[0-9]*"
    paths-ignore:
      - '**/*.md'
      - '**/OWNERS'
      - 'OWNERS'
      - 'OWNERS_ALIASES'

  pull_request:
    branches:
      - master
      - "release-[0-9].[0-9]*"
    paths-ignore:
      - '**/*.md'
      - '**/OWNERS'
      - 'OWNERS'
      - 'OWNERS_ALIASES'

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  mac_build:
    name: Mac OS Build
    runs-on: macos-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Cache Tools
        id: cache-tools
        uses: actions/cache@v2
        with:
          path: tools/bin
          key: macos-latest-ticdc-tools-${{ hashFiles('tools/check/go.sum') }}

      - name: Build
        run: make cdc

  linux_build:
    runs-on: ubuntu-latest 
    name: Linux Build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Build
        run: make cdc
    
  basic_e2e_test:
    runs-on: ubuntu-latest 
    name: E2E Test
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Integration Build
        run: |
          tests/scripts/download-integration-test-binaries.sh master true
          go build -o ./tools/bin/failpoint-ctl github.com/pingcap/failpoint/failpoint-ctl 
          make integration_test_build
          ls -l bin/ && ls -l tools/bin/

      - name: Test charset_gbk
        run: |
          pwd && ls -l bin/ && ls -l tools/bin/
          export TICDC_NEWARCH=true && make integration_test CASE=charset_gbk 

      - name: Test changefeed_pause_resume
        if: ${{ success() }}
        run: |
          export TICDC_NEWARCH=true && make integration_test CASE=changefeed_pause_resume

      # only upload logs of the last case
      - name: Copy logs to hack permission
        if: ${{ always() }}
        run: |
          DIR=$(sudo find /tmp/tidb_cdc_test/ -type d -name 'sync_diff' -exec dirname {} \;)
          CASE=$(basename $DIR)
          mkdir -p ./logs/$CASE
          cat $DIR/stdout.log
          tail -n 10 $DIR/cdc.log
          sudo cp -r -L $DIR/{cdc.log,stdout.log,sync_diff} ./logs/$CASE/
          sudo chown -R runner ./logs
          sudo tar -czvf ./logs.tar.gz ./logs

      # Update logs as artifact seems not stable, so we set `continue-on-error: true` here.
      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: upstream-switch-logs
          path: |
            ./logs.tar.gz


  dispatcher_unit_test:
    runs-on: ubuntu-latest 
    name: Dispatcher Unit Test
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Unit Test
        run: |
          cd pkg/sink/mysql
          go test --tags=intest
          cd ../util
          go test
          cd ../../../downstreamadapter/sink/
          go test ./... --tags=intest
          cd ../dispatcher
          go test --tags=intest

  maintainer_unit_test:
    runs-on: ubuntu-latest 
    name: Maintainer Unit Test
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Unit Test
        run: |
          go test --tags=intest -timeout 120s  github.com/pingcap/ticdc/maintainer
